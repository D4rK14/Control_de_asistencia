<body>
  <div class="container mt-4 mb-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
      <h2>Mis Reportes de Asistencia</h2>
      <a href="/dashboard_usuario" class="btn btn-secondary">← Volver al Dashboard</a>
    </div>

    <div class="mb-4">
        <button class="btn btn-info" type="button" id="toggleCalendarBtn" aria-expanded="false" aria-controls="calendarCollapse">
            Ver Calendario
        </button>
    </div>

    <!-- Calendario de Asistencia -->
    <div class="collapse" id="calendarCollapse">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Calendario de Asistencia</h5>
            </div>
            <div class="card-body">
                <div id='calendar'></div>
            </div>
        </div>
    </div>
    
    <!-- Reportes personales (la tabla existente) -->
    <div class="card">
      <div class="card-header">
        <h5 class="mb-0">Historial de Asistencias</h5>
      </div>
      <div class="card-body">
        {{#if asistencias.length}}
        <!-- Filtros de categoría -->
        <div class="mb-3">
          <h6>Filtros por Categoría:</h6>
          <div class="row">
            <div class="col-md-12">
              <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="filter-all" checked>
                <label class="form-check-label" for="filter-all">
                  Todos
                </label>
              </div>
              <div class="form-check form-check-inline">
                <input class="form-check-input category-filter" type="checkbox" id="filter-entrada-normal" value="Entrada Normal" checked>
                <label class="form-check-label" for="filter-entrada-normal">
                  <span class="badge bg-success">Entrada Normal</span>
                </label>
              </div>
              <div class="form-check form-check-inline">
                <input class="form-check-input category-filter" type="checkbox" id="filter-salida-normal" value="Salida Normal" checked>
                <label class="form-check-label" for="filter-salida-normal">
                  <span class="badge bg-primary">Salida Normal</span>
                </label>
              </div>
              <div class="form-check form-check-inline">
                <input class="form-check-input category-filter" type="checkbox" id="filter-salida-anticipada" value="Salida Anticipada" checked>
                <label class="form-check-label" for="filter-salida-anticipada">
                  <span class="badge bg-warning">Salida Anticipada</span>
                </label>
              </div>
              <div class="form-check form-check-inline">
                <input class="form-check-input category-filter" type="checkbox" id="filter-atraso" value="Atraso" checked>
                <label class="form-check-label" for="filter-atraso">
                  <span class="badge bg-danger">Atraso</span>
                </label>
              </div>
              <div class="form-check form-check-inline">
                <input class="form-check-input category-filter" type="checkbox" id="filter-inasistencia" value="Inasistencia" checked>
                <label class="form-check-label" for="filter-inasistencia">
                  <span class="badge bg-dark">Inasistencia</span>
                </label>
              </div>
            </div>
          </div>
        </div>

        <div class="table-responsive">
          <table class="table table-striped table-hover" id="asistenciasTable">
            <thead class="table-dark">
              <tr>
                <th>Fecha</th>
                <th>Hora Entrada</th>
                <th>Hora Salida</th>
                <th>Categoría</th>
                <th>Justificación</th>
              </tr>
            </thead>
            <tbody>
              {{#each asistencias}}
              <tr>
                <td>{{this.fecha}}</td>
                <td>{{this.hora_entrada}}</td>
                <td>{{this.hora_salida}}</td>
                <td>
                  <span class="badge {{#if (eq this.categoria.nombre 'Entrada Normal')}}bg-success{{else if (eq this.categoria.nombre 'Salida Normal')}}bg-primary{{else if (eq this.categoria.nombre 'Salida Anticipada')}}bg-warning{{else if (eq this.categoria.nombre 'Atraso')}}bg-danger{{else if (eq this.categoria.nombre 'Inasistencia')}}bg-dark{{else}}bg-secondary{{/if}}">
                    {{this.categoria.nombre}}
                  </span>
                </td>
                <td>
                  {{#if this.documento}}
                    <a href="{{this.documento}}" target="_blank" class="btn btn-sm btn-outline-primary">
                      <i class="fas fa-file-pdf"></i> Ver Documento
                    </a>
                  {{else}}
                    <span class="text-muted">Sin justificación</span>
                  {{/if}}
                </td>
              </tr>
              {{/each}}
            </tbody>
          </table>
        </div>
        {{else}}
        <div class="text-center py-5">
          <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
          <h5 class="text-muted">No hay registros de asistencia</h5>
          <p class="text-muted">Aún no has registrado ninguna asistencia en el sistema.</p>
        </div>
        {{/if}}
      </div>
    </div>
  </div>

  <!-- Modal de Confirmación -->
  <div class="modal fade" id="confirmLogoutModal" tabindex="-1" aria-labelledby="confirmLogoutModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="confirmLogoutModalLabel">Confirmar Cierre de Sesión</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          ¿Estás seguro de que quieres cerrar sesión?
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <a href="/logout" class="btn btn-primary">Cerrar Sesión</a>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://kit.fontawesome.com/your-fontawesome-kit.js" crossorigin="anonymous"></script>
  <script>
    window.usuarioId = {{usuario.id}};
    const calendarEventsData = JSON.parse('{{{calendarEvents}}}');

    document.addEventListener('DOMContentLoaded', function() {
        // Inicialización del Calendario
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            locale: 'es',
            height: 500, // Ajustar a una altura fija, por ejemplo, 500px
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay'
            },
            events: calendarEventsData,
            eventDidMount: function(info) {
                // Personalizar tooltip (usando Bootstrap tooltips)
                // if (info.event.extendedProps) {
                //     const tooltip = new bootstrap.Tooltip(info.el, {
                //         title: `Entrada: ${info.event.extendedProps.hora_entrada}\nSalida: ${info.event.extendedProps.hora_salida}\nEstado: ${info.event.extendedProps.estado_detalle}\nCategoría: ${info.event.extendedProps.categoria_detalle}`,
                //         placement: 'top',
                //         trigger: 'hover',
                //         container: 'body',
                //         html: true
                //     });
                // }
            },
            dateClick: function(info) {
                // Puedes añadir una acción al hacer clic en una fecha
                // alert('Día clicado: ' + info.dateStr);
            }
        });

        // Control programático del colapso del calendario
        var calendarCollapseElement = document.getElementById('calendarCollapse');
        var toggleCalendarBtn = document.getElementById('toggleCalendarBtn');
        var calendarCollapse = new bootstrap.Collapse(calendarCollapseElement, {
            toggle: false // Evita que se inicialice en un estado toggled
        });

        toggleCalendarBtn.addEventListener('click', function() {
            calendarCollapse.toggle(); // Alterna la visibilidad
        });

        calendarCollapseElement.addEventListener('shown.bs.collapse', function () {
            calendar.render(); // Renderiza el calendario cuando el div es visible
            toggleCalendarBtn.textContent = 'Ocultar Calendario'; // Cambia el texto del botón
        });
        
        calendarCollapseElement.addEventListener('hidden.bs.collapse', function () {
            toggleCalendarBtn.textContent = 'Ver Calendario'; // Cambia el texto del botón
        });

        // Lógica de filtrado de asistencias (consolidada aquí)
        const filterAll = document.getElementById('filter-all');
        const categoryFilters = document.querySelectorAll('.category-filter');
        const tableRows = document.querySelectorAll('#asistenciasTable tbody tr');

        function applyFilters() {
            const selectedCategories = Array.from(categoryFilters)
                .filter(checkbox => checkbox.checked)
                .map(checkbox => checkbox.value);

            tableRows.forEach(row => {
                const categoryCell = row.querySelector('td:nth-child(4) .badge');
                if (categoryCell) {
                    const categoryName = categoryCell.textContent.trim();
                    const shouldShow = selectedCategories.includes(categoryName);
                    row.style.display = shouldShow ? '' : 'none';
                }
            });
        }

        filterAll.addEventListener('change', function() {
            const isChecked = this.checked;
            categoryFilters.forEach(checkbox => {
                checkbox.checked = isChecked;
            });
            applyFilters();
        });

        categoryFilters.forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                if (!this.checked) {
                    filterAll.checked = false;
                }
                const allChecked = Array.from(categoryFilters).every(cb => cb.checked);
                filterAll.checked = allChecked;
                applyFilters();
            });
        });

        applyFilters(); // Aplicar filtros iniciales
    });
  </script>
  <script src="/js/dashboard_usuario.js"></script>
</body>